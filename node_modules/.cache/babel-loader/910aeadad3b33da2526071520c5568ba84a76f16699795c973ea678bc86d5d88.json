{"ast":null,"code":"var _jsxFileName = \"/home/hasan/Documents/development/test-react/src/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Board.css'; // Ensure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const handleClick = index => {\n    const newBoard = board.slice();\n    // If there's a winner or the square is already filled, return early\n    if (winner || newBoard[index]) {\n      return;\n    }\n    // Update the board with the current player's move\n    newBoard[index] = xIsNext ? 'X' : 'O';\n    // Check for the winner after the move\n    const currentWinner = calculateWinner(newBoard);\n    setBoard(newBoard);\n    setXIsNext(!xIsNext);\n    setWinner(currentWinner);\n  };\n  const renderSquare = index => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: () => handleClick(index),\n    children: board[index]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n  const getStatus = () => {\n    if (winner) {\n      return `Winner: ${winner}`;\n    }\n    if (board.every(square => square)) {\n      return \"It's a draw!\";\n    }\n    return `Next player: ${xIsNext ? 'X' : 'O'}`;\n  };\n  const resetGame = () => {\n    setBoard(Array(9).fill(null));\n    setXIsNext(true);\n    setWinner(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: getStatus()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [renderSquare(0), renderSquare(1), renderSquare(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [renderSquare(3), renderSquare(4), renderSquare(5)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [renderSquare(6), renderSquare(7), renderSquare(8)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-button\",\n      onClick: resetGame,\n      children: \"Restart Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"V2ZfBax/MLcUmLUr3lzE720cqLw=\");\n_c = Board;\nfunction calculateWinner(board) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n      return board[a];\n    }\n  }\n  return null;\n}\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Board","_s","board","setBoard","Array","fill","xIsNext","setXIsNext","winner","setWinner","handleClick","index","newBoard","slice","currentWinner","calculateWinner","renderSquare","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","getStatus","every","square","resetGame","_c","lines","i","length","a","b","c","$RefreshReg$"],"sources":["/home/hasan/Documents/development/test-react/src/Board.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Board.css'; // Ensure this path is correct\n\nconst Board = () => {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n\n  const handleClick = index => {\n    const newBoard = board.slice();\n    // If there's a winner or the square is already filled, return early\n    if (winner || newBoard[index]) {\n      return;\n    }\n    // Update the board with the current player's move\n    newBoard[index] = xIsNext ? 'X' : 'O';\n    // Check for the winner after the move\n    const currentWinner = calculateWinner(newBoard);\n    setBoard(newBoard);\n    setXIsNext(!xIsNext);\n    setWinner(currentWinner);\n  };\n\n  const renderSquare = (index) => (\n    <button className=\"square\" onClick={() => handleClick(index)}>\n      {board[index]}\n    </button>\n  );\n\n  const getStatus = () => {\n    if (winner) {\n      return `Winner: ${winner}`;\n    }\n    if (board.every(square => square)) {\n      return \"It's a draw!\";\n    }\n    return `Next player: ${xIsNext ? 'X' : 'O'}`;\n  };\n\n  const resetGame = () => {\n    setBoard(Array(9).fill(null));\n    setXIsNext(true);\n    setWinner(null);\n  };\n\n  return (\n    <div>\n      <div className=\"status\">{getStatus()}</div>\n      <div className=\"board-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n      <button className=\"reset-button\" onClick={resetGame}>Restart Game</button>\n    </div>\n  );\n};\n\nfunction calculateWinner(board) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n      return board[a];\n    }\n  }\n  return null;\n}\n\nexport default Board;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACO,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACvD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMa,WAAW,GAAGC,KAAK,IAAI;IAC3B,MAAMC,QAAQ,GAAGV,KAAK,CAACW,KAAK,CAAC,CAAC;IAC9B;IACA,IAAIL,MAAM,IAAII,QAAQ,CAACD,KAAK,CAAC,EAAE;MAC7B;IACF;IACA;IACAC,QAAQ,CAACD,KAAK,CAAC,GAAGL,OAAO,GAAG,GAAG,GAAG,GAAG;IACrC;IACA,MAAMQ,aAAa,GAAGC,eAAe,CAACH,QAAQ,CAAC;IAC/CT,QAAQ,CAACS,QAAQ,CAAC;IAClBL,UAAU,CAAC,CAACD,OAAO,CAAC;IACpBG,SAAS,CAACK,aAAa,CAAC;EAC1B,CAAC;EAED,MAAME,YAAY,GAAIL,KAAK,iBACzBZ,OAAA;IAAQkB,SAAS,EAAC,QAAQ;IAACC,OAAO,EAAEA,CAAA,KAAMR,WAAW,CAACC,KAAK,CAAE;IAAAQ,QAAA,EAC1DjB,KAAK,CAACS,KAAK;EAAC;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CACT;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIhB,MAAM,EAAE;MACV,OAAO,WAAWA,MAAM,EAAE;IAC5B;IACA,IAAIN,KAAK,CAACuB,KAAK,CAACC,MAAM,IAAIA,MAAM,CAAC,EAAE;MACjC,OAAO,cAAc;IACvB;IACA,OAAO,gBAAgBpB,OAAO,GAAG,GAAG,GAAG,GAAG,EAAE;EAC9C,CAAC;EAED,MAAMqB,SAAS,GAAGA,CAAA,KAAM;IACtBxB,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7BE,UAAU,CAAC,IAAI,CAAC;IAChBE,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,oBACEV,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAKkB,SAAS,EAAC,QAAQ;MAAAE,QAAA,EAAEK,SAAS,CAAC;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3CxB,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAAAE,QAAA,GACvBH,YAAY,CAAC,CAAC,CAAC,EACfA,YAAY,CAAC,CAAC,CAAC,EACfA,YAAY,CAAC,CAAC,CAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACNxB,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAAAE,QAAA,GACvBH,YAAY,CAAC,CAAC,CAAC,EACfA,YAAY,CAAC,CAAC,CAAC,EACfA,YAAY,CAAC,CAAC,CAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACNxB,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAAAE,QAAA,GACvBH,YAAY,CAAC,CAAC,CAAC,EACfA,YAAY,CAAC,CAAC,CAAC,EACfA,YAAY,CAAC,CAAC,CAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACNxB,OAAA;MAAQkB,SAAS,EAAC,cAAc;MAACC,OAAO,EAAES,SAAU;MAAAR,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV,CAAC;AAACtB,EAAA,CA/DID,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAiEX,SAASe,eAAeA,CAACb,KAAK,EAAE;EAC9B,MAAM2B,KAAK,GAAG,CACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACV;EACD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,MAAM,CAACE,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGL,KAAK,CAACC,CAAC,CAAC;IAC1B,IAAI5B,KAAK,CAAC8B,CAAC,CAAC,IAAI9B,KAAK,CAAC8B,CAAC,CAAC,KAAK9B,KAAK,CAAC+B,CAAC,CAAC,IAAI/B,KAAK,CAAC8B,CAAC,CAAC,KAAK9B,KAAK,CAACgC,CAAC,CAAC,EAAE;MAC9D,OAAOhC,KAAK,CAAC8B,CAAC,CAAC;IACjB;EACF;EACA,OAAO,IAAI;AACb;AAEA,eAAehC,KAAK;AAAC,IAAA4B,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}